<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Co2 New' inline='true' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Co2 New' name='textscan.1wie4s40iahhsx15fzy4c1ftxfof'>
            <connection class='textscan' directory='D:/Tableau_Externship_Program/Project/MyViz' filename='Co2 New.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1wie4s40iahhsx15fzy4c1ftxfof' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1wie4s40iahhsx15fzy4c1ftxfof' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Co2 New.csv' datatype='table' name='[__tableau_internal_object_id__].[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='real' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='real' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/Tableau_Externship_Program/Project/MyViz/Co2 New.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/25/2023 11:30:24 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Co2 New' increment-value='%null%' refresh-type='create' rows-inserted='10918' timestamp-start='2023-06-25 11:30:23.060' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>Co2 New.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>275</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>Co2 New.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2</remote-alias>
              <ordinal>2</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3622</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_growth_prct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_growth_prct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_growth_prct</remote-alias>
              <ordinal>3</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2525</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_per_capita</remote-alias>
              <ordinal>4</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3545</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cumulative_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cumulative_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cumulative_co2</remote-alias>
              <ordinal>5</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6566</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2</remote-alias>
              <ordinal>6</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2272</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2</remote-alias>
              <ordinal>7</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2198</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2</remote-alias>
              <ordinal>8</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1470</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2</remote-alias>
              <ordinal>9</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2611</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2</remote-alias>
              <ordinal>10</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3344</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_industry_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[other_industry_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_industry_co2</remote-alias>
              <ordinal>11</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1265</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2_per_capita</remote-alias>
              <ordinal>12</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>609</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2_per_capita</remote-alias>
              <ordinal>13</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1783</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2_per_capita</remote-alias>
              <ordinal>14</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>547</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2_per_capita</remote-alias>
              <ordinal>15</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1739</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2_per_capita</remote-alias>
              <ordinal>16</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3043</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[other_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_co2_per_capita</remote-alias>
              <ordinal>17</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trade_co2_share</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trade_co2_share]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trade_co2_share</remote-alias>
              <ordinal>18</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3141</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>19</ordinal>
              <family>Co2 New.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10104</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Co2 New.csv' id='Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED'>
            <properties context=''>
              <relation connection='textscan.1wie4s40iahhsx15fzy4c1ftxfof' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='co2' ordinal='2' />
                  <column datatype='real' name='co2_growth_prct' ordinal='3' />
                  <column datatype='real' name='co2_per_capita' ordinal='4' />
                  <column datatype='real' name='cumulative_co2' ordinal='5' />
                  <column datatype='real' name='coal_co2' ordinal='6' />
                  <column datatype='real' name='cement_co2' ordinal='7' />
                  <column datatype='real' name='flaring_co2' ordinal='8' />
                  <column datatype='real' name='gas_co2' ordinal='9' />
                  <column datatype='real' name='oil_co2' ordinal='10' />
                  <column datatype='real' name='other_industry_co2' ordinal='11' />
                  <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
                  <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
                  <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
                  <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
                  <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
                  <column datatype='real' name='other_co2_per_capita' ordinal='17' />
                  <column datatype='real' name='trade_co2_share' ordinal='18' />
                  <column datatype='integer' name='population' ordinal='19' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg CO2 Emission Per Capita of top 10 Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2_per_capita]' derivation='Avg' name='[avg:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([co2_per_capita])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>1977</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cae1ca</color>
                <color>#a7d1a7</color>
                <color>#87c287</color>
                <color>#6bb26b</color>
                <color>#51a351</color>
                <color>#3a933a</color>
                <color>#278327</color>
                <color>#177417</color>
                <color>#0a640a</color>
                <color>#005500</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{CFF0B9E0-A357-4047-B8EF-1CEE63B77A3A}' />
    </worksheet>
    <worksheet name='Avg CO2 Emission Per Capita of top 10 Countries (V)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2_per_capita]' derivation='Avg' name='[avg:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([co2_per_capita])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]' />
              <lod column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{D699D5E7-C583-4F97-9D74-A9B689B7BCAA}' />
    </worksheet>
    <worksheet name='Avg CO2 Emission Year Wise'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{1402EE5E-95A6-47E6-83C5-44EB960EE49E}' />
    </worksheet>
    <worksheet name='Avg CO2 Emission Year Wise (V)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' included-values='in-range'>
            <min>2001</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{088473AC-D981-4BD9-9B3E-C9D641119E09}' />
    </worksheet>
    <worksheet name='Avg CO2 Emission of top 10 Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([co2])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>1977</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{3BE55662-5832-4499-9979-70F3CC4D8309}' />
    </worksheet>
    <worksheet name='Avg CO2 Emission of top 10 Countries (V)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([co2])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' included-values='in-range'>
            <min>2011</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{EEA644EA-056D-4575-B59F-0ADD50D3983D}' />
    </worksheet>
    <worksheet name='Co2 Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>1977</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Longitude (generated)]' field-type='quantitative' max='25066834.248659536' min='-17942805.020599436' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Latitude (generated)]' field-type='quantitative' max='12804225.913125619' min='-9603594.8132893909' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <geometry column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Latitude (generated)]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FF848FF1-4A64-4826-BBF9-838C8D00B848}' />
    </worksheet>
    <worksheet name='Co2 Map (V)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' included-values='in-range'>
            <min>1980</min>
            <max>1993</max>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <lod column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <geometry column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Latitude (generated)]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B64F36EF-BCBC-44D1-8C5A-944870B550D3}' />
    </worksheet>
    <worksheet name='Continent Wise Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[pcto:sum:co2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:country:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1004' />
            <format attr='height' value='578' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <wedge-size column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <size column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[pcto:sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F6436E01-DCA2-41A8-8517-BB0DE42B8925}' />
    </worksheet>
    <worksheet name='Continent Wise Pie Chart (V)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[pcto:sum:co2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='555' />
            <format attr='width' value='962' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <wedge-size column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <size column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[pcto:sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E8DA1718-BD3F-4485-85E6-15640F1BBB13}' />
    </worksheet>
    <worksheet name='Extraction Rate over year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[:Measure Names]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{01E6918E-51EA-4CA0-AEC0-A631D42706CE}' />
    </worksheet>
    <worksheet name='Extraction Rate over year (V)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{87ECF25E-13A5-4C6A-86B5-A2D614190CC6}' />
    </worksheet>
    <worksheet name='India vs China in each Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[cement_co2]' derivation='Avg' name='[avg:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Avg' name='[avg:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Avg' name='[avg:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Avg' name='[avg:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Avg' name='[avg:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Avg' name='[avg:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:flaring_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:cement_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:other_industry_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols>([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:oil_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:gas_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:flaring_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:coal_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:cement_co2:qk] + [federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:other_industry_co2:qk])))))</cols>
      </table>
      <simple-id uuid='{4F8109F6-F978-4551-B011-4C91A6D88BC3}' />
    </worksheet>
    <worksheet name='Trend of Each Co2 Emission Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:flaring_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:cement_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:other_industry_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:oil_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:gas_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:flaring_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:coal_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:cement_co2:qk] + [federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:other_industry_co2:qk])))))</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{D827092B-D1FC-40D0-835D-E565ED945E68}' />
    </worksheet>
    <worksheet name='Trend of Each Co2 Emission Category (V)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Co2 Per Capita' datatype='real' name='[other_co2_per_capita]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_co2_per_capita]' derivation='Sum' name='[sum:other_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:flaring_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:other_co2_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:cement_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:coal_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:flaring_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:gas_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:oil_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:other_co2_per_capita:qk] + [federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:cement_co2:qk])))))</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{F17045AF-F6FF-4D5A-BBED-A85D8A2AC93E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
      </datasources>
      <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
        <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98044' id='7' param='horz' type-v2='layout-flow' w='98986' x='507' y='978'>
            <zone h='98044' id='5' type-v2='layout-basic' w='84084' x='507' y='978'>
              <zone h='49022' id='3' name='Co2 Map' w='40527' x='507' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='10' name='Avg CO2 Emission of top 10 Countries' w='43557' x='41034' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='12' name='Avg CO2 Emission Per Capita of top 10 Countries' w='43557' x='41034' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='14' name='Avg CO2 Emission Year Wise' w='40527' x='507' y='50000'>
                <layout-cache minheight='312' minwidth='178' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='235' h='98044' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='14902' x='84591' y='978'>
              <zone h='9413' id='8' name='Co2 Map' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14902' x='84591' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9902' id='9' name='Co2 Map' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type-v2='color' w='14902' x='84591' y='10391'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9902' id='11' name='Avg CO2 Emission of top 10 Countries' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' type-v2='color' w='14902' x='84591' y='20293'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9902' id='13' name='Avg CO2 Emission Per Capita of top 10 Countries' pane-specification-id='2' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type-v2='color' w='14902' x='84591' y='30195'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='83' h='11125' id='15' is-fixed='true' name='Avg CO2 Emission Year Wise' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' type-v2='color' w='14902' x='84591' y='40097'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='73' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='72' param='vert' type-v2='layout-flow' w='98986' x='507' y='978'>
                <zone h='9413' id='8' name='Co2 Map' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14902' x='84591' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='3' is-fixed='true' name='Co2 Map' w='40527' x='507' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9902' id='9' name='Co2 Map' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type-v2='color' w='14902' x='84591' y='10391'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='10' is-fixed='true' name='Avg CO2 Emission of top 10 Countries' w='43557' x='41034' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9902' id='11' name='Avg CO2 Emission of top 10 Countries' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' type-v2='color' w='14902' x='84591' y='20293'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='14' is-fixed='true' name='Avg CO2 Emission Year Wise' w='40527' x='507' y='50000'>
                  <layout-cache minheight='312' minwidth='178' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='11125' id='15' name='Avg CO2 Emission Year Wise' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' type-v2='color' w='14902' x='84591' y='40097'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='12' is-fixed='true' name='Avg CO2 Emission Per Capita of top 10 Countries' w='43557' x='41034' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9902' id='13' name='Avg CO2 Emission Per Capita of top 10 Countries' pane-specification-id='2' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type-v2='color' w='14902' x='84591' y='30195'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DE0B2E1E-D0A1-459A-A776-416D5676C508}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Co2 Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F8855C96-89B3-4386-9B09-ED2F66B29A79}' />
    </window>
    <window class='worksheet' name='Co2 Map (V)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type='color' />
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{BDE41B8F-F7E5-46DF-9717-8C7961C85351}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission of top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F48A25A-3F25-4383-A965-34BFD57BA4DE}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission of top 10 Countries (V)'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{390631B9-F33D-4A0B-B40C-F48944885CA8}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission Per Capita of top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1911D0F7-DDE0-4EE2-AF9C-BE21D1DAF59B}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission Per Capita of top 10 Countries (V)'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF8131C5-2C0C-48C2-A0B1-A3FE50EF1C63}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission Year Wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E39BDA7-E966-488A-9A41-3C0A4A094319}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission Year Wise (V)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F49B5AF1-0E67-4121-A8D0-A930583ADC92}' />
    </window>
    <window class='worksheet' name='Trend of Each Co2 Emission Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CA1A3DB-6386-4DB6-ACBB-E80533B752A1}' />
    </window>
    <window class='worksheet' name='Trend of Each Co2 Emission Category (V)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5209FB2-E949-43CD-A0D3-609AABCFC2CE}' />
    </window>
    <window class='worksheet' name='India vs China in each Category'>
      <cards>
        <edge name='left'>
          <strip size='180'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A93EB6D2-1A25-4E04-8B91-993073511F2D}' />
    </window>
    <window class='worksheet' name='Continent Wise Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[:Measure Names]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D2CD9F3-BDC7-4289-8DDA-EE67A447B79F}' />
    </window>
    <window class='worksheet' name='Continent Wise Pie Chart (V)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[:Measure Names]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83006D3D-2A0D-4520-AA20-1B2E3B36E95C}' />
    </window>
    <window class='worksheet' name='Extraction Rate over year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B751FCDE-BFB4-479A-AEC9-E90254B03816}' />
    </window>
    <window class='worksheet' name='Extraction Rate over year (V)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{962B9D8F-044C-406A-B6B8-3D0A3633588C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Avg CO2 Emission Per Capita of top 10 Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg CO2 Emission Year Wise'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg CO2 Emission of top 10 Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Co2 Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{F0A7E69F-03A3-49B7-BA24-75546E8587EA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg CO2 Emission Per Capita of top 10 Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg CO2 Emission Per Capita of top 10 Countries (V)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2d53McR5qnn6pq79Dw3huCBC3oRCOSkiiJlCg7Mxq/M7uzM7cbGxuxGzdn
      /oGLuNj7cB/u7sPd3uzO3sXMnsZIQ5Gj0UiURNGDIEgABOG9R8OjG2hbVfeBFIkmzBAtAATZ
      +UQw2N1Z9eKtzPxVVmblmynpuq4jEMQp8uN2QCB4nAgBCOIaIYCnhPbGRvwR9XG78cRheNwO
      CBYn4B3n9O/OULT7KLbZPqpbhnjra2/R2XSH7TvLuFHdhVXxUtvQwoFjx/nn//nfSN/8DCeP
      7WVqZhLfTJDM0q24IyOEEorJT7E97kvakIgWYIPyx9O/pqDyCNnOMB9fbubIrmzeff8cdbfq
      0LRZbty4Q0NtDXt2FnHuSgOlxZt45fWTTHXXc61llJ3bi/n83OdcuFBFYoLlcV/OhkUIYIMi
      SRJqREXTdHRdIxJRkSSZ4JyXrvZOgoBisZORmQGqjtNmYtYfRNdNHD12hKS0XNzqACOaC6dB
      FPNSSGIYdGMS9E1y5sxZinYdwTrXT03rMK+/+QbdtRfonAiQkZqP0xKhqDCHxs5JClNkfv9Z
      NQf27sCZmU+6y8qNj99lInkvL+0uetyXs2FZMwFomoYsizvP4yIS8HKlqo69Bw9iNYpyWIo1
      E4CqqiiKshamBYJVQ9waBHGNEIAgrhECEMQ1QgCCuCZmAUx6Bqmvr6d3aBRNDdPW3MiUL7Ca
      vgkEa07MAugZHGHb9u3kZabScruWpJwCGm/XIl4qCJ4kYp4L5LQYqKu9hdmRzKwKyQ4bdqOB
      sK6jaBqqqiLesQk2OjELIKewDJPJSPWNm5gViaCqEQaMkoR0b/z/y/cA0yNtfFI1yAt787l0
      4zazkx62HX2LivwkepvrqWvrYXzMw+Gjz9N8pwG/d4KSPS+xqyxzVS5SIFiKmB+Bhno7qa+r
      J6ewlPKyYhrra0nOyEN6+EBd5WJVA5LfS2JmAa+dOkVCQiK5GQkA5JVv59SpV3A63BQWFXLq
      1CkSXU7yclK/wmUJBI9GzC1AQenmqO+7diUuelxj9QXKdh+m6VIVAHOT/UTsmbjMD94SDzdX
      k1a+FwUIz43hlRJJtomZ2oK1Z82HQUO6TMvNy1TXXGd4ao6rl6s4cHAvuq7T1tYBus6l+l4O
      bc0D4Mr5Cxw4enit3RIIgHWbC6ThGR4nLSOVkeER0jPS0XWd/r4BcnPTGfF4SU9PArifLhCs
      B2IynCCuWfMH7bmQSt+kf8XnFSbbMIlADsEas+YCGPOF+PDO6IrP+8H+bJIMpjXwSCB4gLjF
      CuIaIQBBXCMEIIhrhAAEcY0QgCCuEQIQxDWxD4PqOvXXPsOUs5MUxmgZ9pOcmEh5Sf4quicQ
      rC0xC2Da04tkTUBVVcYnJjAYHaSkJN+PAdB1/d7n2F80i3gCwVoTowBUbjW0k5+VyODUNIcq
      D6BrKlevVrH/4AHQNHRdR1XvLu0XC9q9oBqBYC2JuQXYunUrs5ODIMFATzszc2E0xYT8UECM
      LIdjsi/LMgaDmBItWFtirGEKKenpJKelkqtLSJJOSihMmdG4MCBGINjAfKVbrCTJSBKAhNls
      Xh2PBIJ1RAyDCuIaIQBBXCMEIIhrhAAEcY0QgCCuEQIQxDVCAIK4RghAENcIAQjiGiEAQVzz
      lQQwPtzH+IwfNRygufEOY9Ozq+WXQLAuxCwANTRLa3MjwxNeWu7cJj2/mLamhjXbICM456Wp
      8Q4TM3PoukZfVxsDnon76bqm0tnazMj4DLqu09fVxsjEzBp5I3haiHkyXEdrG0UlJYxFYE6F
      RLsFm0EhpOsY5m2QEeucflVViUQi978PDfYjG4yc/t1vOFyRSVcglUDPRfRTf0aGDbpbbjMn
      Wbn80Qdsy89k3JDMyPn3eemdb+E2iyUaBYsTowDCjE1MMz01hkd1k+eSmAurhHQd00PxALGu
      D6ooSlQ8QE5uDh+d+RBHYg5Jaelc+aIBPWQi0W7AoEDJlp2MDrTTYHJCJII92c2WHIXWIT8H
      S9yxXabgqSdGARg5eOQoodlJpkJG3GaN5sbbZOQWrVk8gGJycPKNN3n3N+/T2jjLoZdfIdR8
      jrbhOXZm2xhsr+VK2xTfePt1DLJG653btI+rlFda1sgjwdPAV4oHMNkTSbPf/bx9x87V8GdJ
      Gqov0+OZIiElm9LyDC5c+gxNlTi+M8QXV1qITLZj1Cx89NkXPLe7nLaeAYyZZRQmiTgFwdKs
      +fLovRN+fls7vOLzf7A/myS7WBxXsLaI9wCCuOaJiTof9IZoGl35PgPHClwosohUFizOEyMA
      VdMJRMQ6QYLVRTwCCeIaIQBBXCMEIIhrhAAEcY0QgCCuEQIQxDVPzDDoatHZVEtz1wA5xVvJ
      dulU37qDLTmbw/t2Iks6tVcv0Dc2gy+i8Mbze7l4+TpJOaXs3V72uF0XrAFLtgAP1vdfnK62
      Rupqb1Hb2MZoTyOXrt+iub1nTZxcTTLzyzhx4iRNtZdxJKZz/OWTBAeamAwBSOw8cJRTJ46h
      6BLXL11j3/MvMd5SzXhQvIN4GlmyBfjlL3/JoUOHKCgoWDQ9r6AYz8gQw1NBpiZ9mEwW3G73
      feHouo52b5+AWPjy/AffYzJzz86Dk7Wgl1//5pcYMyowGuCTM7+ha0bhmEHjyz9X/cVn7Dv6
      IoGuGj758EPU6WE8UyESU42xOSHYsCzbB2hqauLq1auLpqmRMP5gBHSN0p372LtjK12tjXxZ
      ZecLIRbmn/9VdprRdG2eHZUZv87b3/4B/rFuPGPTHH3lLbakQ8/IJKMTXtSQl54pmRy3mbzy
      Hbz26gkc7lxyEg0LfBL/nvx/S7YAkiTh9/sJBAL87Gc/40c/+lFUemd7GyFdJqIaGOhuY2x6
      7sEGGZKEruv3NsiIrZ8ty3JUMI0kRZY5emkUWZk3F0gmMOPhk9qbHDhyHJM+xxeffkJqbiX5
      CdDh8eMyGjh89CgGRSGshbh4/irbDx/HaRJRZU8jT8x06L7pIPUjK58Md6IkQUyGEyxJ3I0C
      BSIawRVOqpMkcIm44qeSZQVw+Q+/4oNLtzGpAV75wd9xYHP2evm1Zgx4w3RMBld0jlGWeK7A
      uUYeCR4nywqgvrWf548dwxYZYXRKrPkjePpYtof69ttvsWvHZoa9Rp6pyF0vnwSCdWNJAWia
      xntnf4/NmcK2XCtVd3rX0y+BYF1Y8hGo9sonVFfXMDv3PzBZbHzzey+sp18CwbqwuAB0FcmZ
      yY+//w6DE34kCby+OdITrOvsnkCwtizRAshkZWZiK8glf9aPJMskuMUoiODpY/E+gCSRnpZK
      w7VP+b+/fJd/+fn/weNd2dDh004k5Kevr59AKIKmhhno7ycQjl4HNeCbwecPoWsqg/19eOdE
      Hm40lh0G7ez18Gc//jeM135ETVMvuUmbURQRQgBQV3MDxWrjck09acYwzvQsvrh6i299/TVk
      CdBVzr73T9gzXyBB7sLgzqX78hVe/9o3scTd68eNy7K1uaAgiw9+9QsuNw0z2nSZS7ea18uv
      DU/lM4exyyGcCUlMe/2Uba5ACY0SiNydDth84xJFlYcxAC5XAr093eiKHXH/2Fgsey9KTkxk
      oqYFWVc5/vUfsrs0636aZ6CHkYkZMvOKcFskWts6SM7MJz3ZteZObwSqL/wBvy2fV56rIOLf
      wpWq64Q0MwZZgsgcH31xneysBDqHzJTn2jh+6nWunDvNbDCC2yqagI3CsiXx6cVqduzZR4Zh
      ivGH+gB2dwoVGZlU3ajDZYLc8h001teSlrxvzVaI3jjoNLW2kZShcrkGChLA6/NStmMP/qFm
      bs8l8Xc//Xf4p/tpaA1iV0b44twfUaUEbGJW6YZiWQG89MJzyHY7H33YwMlvPB+VJqsBrl66
      RkJOOf7JQVxWE1ZFXrMNMuYHx6yESCSCPm82aGx29ChfAL77538T9f1Ewab7n3fc+7tGewa7
      dgHkU7b9S1MqkdhmdgvWgCUFcOf6BewFOylIc3Hy6CSBUHSp6QYrB589RtX1GhwWGV8wTFBb
      uw0yZDk2IRkMhqjp0LHZkaJ8ETw9LFmqbc0NFKVvBWBmtI8eXxJb8pLvp48O9TI9F6awdBNJ
      doWW1kZyCkvj4PHnLv/9V1/w8fWmFZ1TnJ3Kf/37r62RR4JYWFIAz584yT/+/B/5RFbQTS5+
      8pOiqPT84vKo71u37VgbDzconkkvHf1jKzrHZBStyEZjyRJxpRXyb//9f1hPXwSCdWfZUenW
      1mYiamydT4HgSWBZAYx33uEPF2uYmZkhGBZDF4Knj2UFYHa5mRlo5cyZM3QPTa6XTwLBurGs
      ACwKDAz0YzAY8IbEo5Dg6WNZAVy8eoNTJ59j1jfFgGdqvXwSCNaNPxET/CaXr9xAsqZxfE/x
      evkkEKwbS78Iq/mc3124TSSk8rd/8SZ2Y7y84hLEE0u2ADdqG3j9ne+zJctIc+8EaoxzcQSC
      jcySAjj64itovlGKdhzGFhrDOyuimdaCwOw07R1dhCIaft807W3t+ALhqPSOzm7CqoYaDtLV
      0YEvEHqMHj9dLPkIlJVXTNZSiUA4MEtP3xCZufmY9ACdvYMYrU6K8pY7SzAfXdOoq63DmeDi
      zMefsbM4g4guc/r0B3z3m3fnDJ09+wGbt1Twh3NdWMNjZBRVcO2Ds3z7nbfv25ka7uZidQNz
      3hmOvPwKDdcvMuObZcu+F9icn8pobxvX6prpa67nyLf+kvZrFwgEAhx+7RvkuC2P6/I3BEu2
      AC3Vn/Kf/+Ef+PjKbXpqP+P9i41R6UPDI2RkplNXW8tIXyfOtFyyM1LW3OGnCUmW2XfgEHOT
      w6SnZ5OVkUZTfT2J6Q8WIbMYJFpaO0hITCXBaae1uRmzzR1lx5WWx6uvvkKGS8KPlSPHnicv
      3c3cXACA1LxSXjv1CmmFm0iPDJNUuJu3336RG5cWX/o+nliyBbjd0Myb3/sxVe//M3peFgF7
      dOXOzS+gq6URd2o6shxkpLcNj8HKji2laHEQD6DpMdjRH7Kj63z24XsklezlmU156LrOiZMn
      ePeDD4lEKoE5vH4Lb7zxPKc/uYg5MMtLb77J6Q9OR9lRw37+8MFpcrYdJC9Bobu1kbGZICnJ
      ofvHDTZXk1q8E3dWFuGWT/n0IoRVc5Qdv3eS6hs1GJ3p7K4o4Nq160QUO4cO7sNskFHDfq5e
      vow9rZBdW4rRtQgXPrnIwZef40ndOmRJARx69jDdYxN8+4d/zi9+/k8UHNwXld56+yaWtEI2
      pyejqhGyDAZqqqvRJOl+DMDTHA8gSzEE90rRdjQ1TO/gIEH5DpKkoY714PH6ycotpq+xDrJK
      SUtUOPf5RQoKN2EJDPP5uXO4U3Kj7LRUfc5Q0ILL08eI20j3wAQGg0IgFOba1SoOHX6Gm00D
      nHz7GRQthM3hxDcywr6jL0TZCYcj7Dv8PDc+P814oIj9zz5Hf915mgem2F2cRv2Vi2RuOcjg
      zY+ZKClh/E4VTa2D7H/VwJO6YtSSAsgs2YFzfJDfvn+GhPwdHNxWEJXu8wcIegboCARwKEFG
      JrzY3KmIgL9HR1aM/OVf//28X0oWHFP46lvzvpWzaxE75ftPkr8jCJKE1WolOTEZDRmr5cs7
      vMypt97EoEjosonKPftBNmA2Rd+3k1IzqK86z5QhnewUF/VXP+N8dTs//MlzAEz7vJQkJ6Cm
      JzLQ38vgtEJZlnsRj54clp2g/u4vfsGRr/8FI9UfcO5mB6/uK72ftnv/4ahjM8TauY8NxWDE
      4XhQmRWr7f5no/Hu71/e6SVJwmxZ/H7devMCk+Zs3nypjDnfNGW7j5CZ4uBGcy+V+UkkutwM
      jk3hGZnGJY/imx6jteYGibt2sbcsbw2vcO1YVgCbS/M4896vCU55eHO36OCuBdd6ZxidDf/p
      A+eR4TSxN+fBSn3+sMrNfu+K/3ZFhh23dV4rYLIw3dXCmZFeDuzZRt2Va2BxcehAAS0NDWzf
      f5TLFy+QUFzJrs1FVO6Gnq3byHxCKz8s9ya47jo5e07y10cN9LXWIyviTfBa4A9r+FY40dAf
      jj4+FNG5PeRb8d/OS7RECaBs237Ktj1If+Gll+9/3rnrbsTfs8+/FGUjf9PCKTLtDTU0dw/h
      mQ7w7VNH+f3pd8ne/3UObMoAoKW2itY+D9W1Dfz9X32X3314EZB55zvfxG6UH7IziC0xm8OV
      JXxy9tdsf/lH5N5becc71s/5y7dIyy9hR1EKf/z0EhZ3Bi89d+CRQ3OXHgWqrWZTcil5qS6C
      UwO0+xIoyXyyn/cEyxMMq4x7Ays+LzXBinHeil8lW3eTUzDBr86cw+xK4cWjB2idJ/JNO/eT
      lz8AliT6a2s4+ua3sXSd407/DPsKH9Sx7OItFG/Zwb/++jeEtxexuTCFmfvvY3UuXrlKSfkO
      0rNyqL32CXteeJWBa2cZ8GnkOB5tkGJJARx74Tj/+xf/i8+sVubCEj/+q9dWliuCJ47OkWn+
      y/u3Vnzef/ruM2Qm2e9/nxru4Pfn63jttdeRpcXuxTpVV6+z79lXGa36Azp394GWHjpWjszy
      q/c+Yt+xE9idbqxGmfnbJI6NDlNSvpPTv/uAAqcZu8WE2yUzMxsGh/mRfF9SAEk5m/jpT39K
      WFUxGozIYqdFwSPyyUcfYUnK49K1ao5sz+OPn19hOJJIpuM4HV2DPLu3lOmIkzSnCffevfy/
      D/4VSTbzjW/OX4Fc5+zZM+x/7lXcDguhoJ/pmVmm7VMErRq94xEKc/JRjVbMRpmsgmRu32lh
      rDvIS3tNS/r2MMt2gmVFwRzjOL4gfvnGD6MXDXvnh397/3NO5t1+wBuvHwfAnJDFD77/3UXt
      7NxVSX9nKx5nMiXpNsakHPA0E0gtx2m3UPLiKzTU1XL8xKukJViRGuspPn4C+0P91f7OJuqb
      uyit2E1ukoHzF69RsLmS8sLMR9sm1dNZR7vfzcGK/EfPBYHgKyFRXL6D+V3swxkP6l/Cvf+3
      7dpz/7eyip2LWzI5efnl4/z6vdO0GeHwidf57OwZivK/trwAmmuraOvzoGkqisnOTFEWLuuT
      +tJbsF5M+CP0zax8xuq2NGtUn2FkJsDIzMpmISuyREVW9ALN6WmJnP3tr6iofI7Om9dxWczY
      7TqhsL68AC5dusKhk28xVH+eruEx/uX9z/jb77y83CkCAf6IxsjsylcR2arD/PHL1hEfF1rH
      V2TDapQXCODs++9x+JV3SHGaGWpUmZz1Mzsno6hzywtgW2kO77//OyLToxx94RjdM4/WsxYI
      Ng46breDq+c/JjGrkGMvvsgXX5xn2/4j6HOTywvAnV3K97YdIT01GZNB5lldjAQJnjQkjr38
      VtQvL544ef/zsgJITHRz7eoXdHb3cOSN71FZknk/rae9iSlfEIPNTbZboa3Pg8WeyLbyomUs
      CgTrjz+sEVpihcNlBdDX2cLw+CTpucWkJzqi0nIKy8hRQ1yvbSTo1ais3ENtTQ0qRWJGqGBD
      0ejx0z21eGd6WQFs2XOEit2H6WprIhiMnrA1O+XhdmsfuyoraWqoRZYkFCQ0XQcRELOEmYV2
      dF2PwUy0HVWNbdnKh/M41rKKPFxWMa4nuzplxSJ5vLSdJQXQeaeGC1W3mJ0cZkDL4D/+zbao
      9JqbdRSVb8Xn9ZLitNDc1kFAlzFKEoiAmCXMLLTz8Ov/RzMTbSfWd5UP53GsZWV4uKyU2Cru
      wrKKbUfBhXm8tJ0lBTA63M+UL0hOWiphJQ+XLXoEaM++/YRVHcVoIrV0C97pGYoLC2JyWCB4
      XCwpgP0vvM7e5zQGu9u4cOkyde1D7JjXCXYmJEYd73KLmaKCJ49l+gASsqyQU1TOd4rKlz5M
      IHiCEds2C+IaIQBBXCMEIIhrhAAEcY0QgCCuEQIQxDVCAIK4RghAENcIAQjimpgFoOsaHs8o
      OhCam6a+vp7m9p5VdE0gWHseaVWIxRju66a9b4zktFRG+nrILqkg2SYiAQRPFjELIDOviInp
      OQCMFju9bQ10SyYqt5WLDTKWNCPiAZa1s5HiAVZCclYe6XkGbt64ITbIWNaMiAdY1s5Gigf4
      U/R2tjA1M01LezfJFhgen8aZnCHCIQVPFDELIK9oE3lFm+5/T89ZFX8EgnVFDIMK4hohAEFc
      IwQgiGuEAARxjRCAIK4RAhDENUIAgrhGCEAQ1wgBCOIaIQBBXCMEIIhrYhaAZ6CbC5evowET
      Qz1cr6mh9k7bKromEKw9MQsgKT2HZJcNHega9LC7shLNP42q6+jz/n0VVsOOvsBObLb01bgu
      fZXssDrX9LA/X8HMGpVVjHYW5PHStmKeDRo951pCliQkQAPQtPvBDKoWY0DMvaCaL4k1OEJV
      1aidBzUtloxdGNijxVRAC+3EGhAz344aYwCKpqnRdmLMY01V16Ss9JjKamFgz3J5HLMARgZ6
      GRwcxOpOJj3BRv2dRoIYF26QIccYECPLqxMQoyhrFBATw4aBGywgRl4QEBPbA8HC4KUYA2Ie
      KitJjm1TxnUJiHEnp3LwcDKyYsBiziAlEMBgEtuoCp4sYhaA2WJlfnW3WK2r4I5AsL6IYVBB
      XCMEIIhrhAAEcY0QgCCuEQIQxDVCAIK4RghAENcIAQjiGiEAQVwjBCCIa1Zldeigb5Kmjl4s
      djflJfmrYVIgWBdWRQAjA73klW0jySoaFMGTxaoIwGJ30dt6m3ZNYe/OCrFBxpJmxAYZy9p5
      UjfIcCVnkJJdwM3qarFBxrJmNlY8gNggY5UE4JseZ7BtgqSMXLFBhuCJYlUEkJKRQ0qG2CFD
      8OQheq2CuEYIQBDXCAEI4hohAEFcIwQgiGuEAARxjRCAIK5ZlfcAU55+2vpGsNgT2VZetBom
      BYJ1YVVagM6+ISorKwn5JohtwoJA8HhYFQFo9xbHVZCIbRaIQPB4WBUBpDotNLd3ENBljKth
      UCBYJ1alD5BXuoWZ6WmKCwpWw5xAsG6sigAkSSbBnQg8mN/+5eYEsgQWQwxTfomeKy9LYIyh
      vbrrx4PvMjordccoL5y3b7MYcTtWtiCwy2ZeYMcgS5hWOIV2oT86ZmXleSwTbUeRJByWlVcJ
      SXqorGDFeQwLy8ooS1hXWOgWo7JIHi9ddyT9q27j8hC6rqPd2yAj1vnc83ka7XyZ5bHEAjxs
      56vagI2VN+ttZ1VagPlI9wJiJElalYt4Gu2spgBWw85Gypv1trPqLYBg46BpKjoSyipUpqeV
      Nc+Z2UkP1TdqqK6+wYw/HJXW2dhE4BFsTIz0caPmJs0dvV/NGV2juaGWutpb9I1MMDU5QXT4
      qk5TU9PyNrQQTc0dALQ0NfFQpDATE5OMDXQxMuP/k+5oaoCurv4VXsRC6muuUVdfz/Vbt6N+
      940O0D8680g2+to7CKHTePs24a9wTxztauP6rVqqq6qY8AVjthOcnaK+5hoffXqB3qHR+797
      pyYIPfSyaWJiYgkrEa5fvkxdfS31je2LHrHqj0AP097Zy87K3cihKeraeshyKwyPjeFMyaOz
      pYlxXaIiN522rl7CmoHyLAtVrWMUF5dQkJUMQEfvELv37EWWJFpamigr20z97TqcRhNj3gkK
      S7cy2t+Ddy7A1u3baKyvx+pMZPOWsugQTS2CZ8LLvgMHMRtkutpasDgULpyrx+6Qyd9UTlNj
      I4rJTmlxHos+WOgas7N3K/fc7CzTg10090+gqGG279nP6OgQgbEhxhnFVFFKS1MLumJi395d
      KAseVVT8/ruVpKO5hdzyTbTV15Ga5GBOcuCdmsJt0fBM+7EnpFJenLtoHstmG1s2l3Ol6iah
      gJeWlk5mI7AlJ4GutmaGOjUqtmyiuq6JtIxctpYtXLomMOdnuKcVS3IW4wNdmNw5jHc0oyRY
      cSXn0lx1nu1HXqC3tYNkl5HhsQnc6UUUZidH2QkFIpRUbGWm4zY+f4ieppvoKKQXljPYUovZ
      4cDoSCXNLtE/PIrJmczm4rwF/pjtbrZvLiXYNUNeppvrly6i2xLJdhpwOyxcPXcDh8tEZnEF
      3lEPSUlJixUWNmcy5Ztyqa5tprujkcGhSQqK8gloRlIN3rVvATRdQpZANprQw2ECAT+SojA6
      4iErJ4+KinIi4SC6DlPjHkLhMJmF5fcrPwCShHSvOobDd1uRUChMODhH6Y5nSLIphFSNkN9L
      X0crqcXb2Ppw5QdQjDyzdyfN9Tdp6ugjEg6j6xrp2YVsKUpnTrOQl59P2VKVf7HrU1XySzeT
      n5nAbFAlHI6QlpFJ6eYKwhO9zGpGIlPDjPmXv6tGwmH0e9eVlFVI260rZOTm09PTh9FgYHBg
      YMnNPn1TY9xuaMJitRMMBIjoMD06ThiZwtJySnOS8M6FsCVmUrFI5QcIB320dQ3idjnQIhE0
      XSccCpGcnMDwUB8OdyqDLY0YE1Lw+wMoBoXR4ZHFLNHccJspv4ZJn0Sy5rBrzw48vX1YnUls
      37EL1T9JIOAHWcEz6nm0jDY42LerAjVyt8yS03LZuqmI2dnZ+3ViMcZHBrjT3IHd6STsD1C+
      ax/JDjMRVUVTI2svgIwUJ3eaWqmtqSUtN4fxyRlcDjsSEjabgZ7ufoZHPDgSEjAY7naerVZL
      lI1Em5GW9k56+odQdJXuni7Gp2eRFDM2s0JgZpKIYsFiNuJIyWCku5Xe3gHGh3uYnIvQ2dkF
      gK6q9PYPkpiURCi4+MOXoocZGB5DB7xjQ4zO+Ons7HxwgGxC0Wbp6uoioCmLNqEWmxVPfy9G
      Vxoum5msojKccoievgFGeu/enb9kcmyEvsFhTIpOd1c3nvFpJod7yd+8i76uTtLS07A7XZQU
      FzA20IM3oEb7AxhMZhITE/F7Z5icHMVkc2E0LCxam82GBPR2dxKOhOjqfvD4ZTQ7OPTsIVpv
      3wJZZrC/l8GRMQzOFMZaG8jeXEFv3wCZKQlMTHtxOO7aGuztJBBR6ezs+TKDcCKoUnEAAAIO
      SURBVLndmBUNX8RC0NtPR3MLjpTUe+l3by1j45O4nA5kSWJksBdfILLguhb4vkxnPzQ7Rf/I
      BIM9nQTmPSKZLVYS3S5mpqeRTWYsRgXZYGBqbISu3oH16ATrzPq8TI2NELEkk5loJRjRsZiM
      KIqE1zeH027H6/NhsVgxGiQ0DBjmj2vrOj7vDLLRgsUo450LYDabUWQJg9GIpOv4vF4UkxmT
      yUQk5CekgtWogGIiEg5hsZhB1wkG/PhDEVwuJ1okgmJQiER0FFlHQwY1jD+k4nDY0MIhNNmA
      Gg5hsTwQpRoJ4/XNYne6UHQNXVZAi4BsQFMjGAwKPq8Xq91JODBHRJdx2CyEwhFkNGSTBUW6
      u16Nd3oaTVJwOWx4fXOYzWZkWcJoNBEOBTEYDXhnvFjsDmRdRTbc/X2+P/5ZL4FQBKvNgdko
      4/X6MFmsmAwyGjKSroIko+lgNCgEgwGMJhPhUASz2QTcbYEUoxE1FATFwJzPh9Fkxmy1EPT7
      sVgsBAIBLBYr4aCfkKpjNhnRNRWDyUwoeDeP1XCIGd8sisGE02EjEg7iD0ZwOuxEIhGMRiPh
      cBhJ15gLRrBYTEi6tuh1oauEIjomo0I4fPfcSDiMbFBQIxoGRULV7uajIktENECLYDBZuLu6
      io5vZoawpmN3OJF1DdlgQAZmfV4kg1GMAgniGzE+JohrhAAEcc3/B8NEd1ja2pDIAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg CO2 Emission Year Wise' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg CO2 Emission Year Wise (V)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg CO2 Emission of top 10 Countries' width='192'>
      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
      rH+iAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg CO2 Emission of top 10 Countries (V)' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Co2 Map' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Co2 Map (V)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Continent Wise Pie Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Continent Wise Pie Chart (V)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Extraction Rate over year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAZDklEQVR4nO2d2XNbWX7fPxcXK0GAFEmAxMJ9k0hJlESp1e1ZPE4ynqmJl3IlmZRTeUj5
      xZU3lyt5yZ+QVCWPcVVSqXLit6RSjlOxE9sznpkee9QtUdRCUlxFcAG4A8RCYrv3njxIYHdP
      ayEvQIDUPZ8qFsEifvj9DnC+95x7zvn9oAghBBKJRbE1OgCJpJHURQCGYWB2oNF1/VLYCSEw
      DKOuPutt1wifZvuOYRin+jzqIoBqZllmbRthd5liNUu9fZq9qJzWn5wCSSyNFIDE0kgBSCyN
      FIDE0kgBSCyNFIDE0kgBSCyNFIDE0kgBSCyN3azh+soCqVweHM0MdtiYepkm0OZnqKeNxI6O
      z5HhSG2np7OllvFKJDXFtAC6B4ZpSyeZXUmwt5XH7vQQCARBFMmlk+xrBe7c7v/KlrSZ7XCz
      Rwzqbfdl+3r5bEQbG+XTLO+zNS2Acj7L6sYWLpeT3vGb9GHw8MEDrl4fJLG+Rkd/PwoKhqFX
      dRjOMAxTB6nqbVf5gM0e3LoMbWyEz0rfURTlzHaKorzXzrQANuMJmjwe9lNZduIxsvkyGip2
      m43eket4lH1i20n6Q20A2Gy2MzfiJEi7uTDraVf5oFRVrZvPRtjV26emaaiqeua+o+s6iqJg
      s737NlcxmxCjlUsUS2Vcbg+qDfLHeRwuN3ZVwTBAtSmUNR2Hw46u66YFoGma6TeunnbVCOCy
      tLERPs9bAKYvA3aHE7vDefJ3k9d78rjSBxwO81cZiaQeyGVQiaWRApBYGikAiaWRApBYGikA
      iaWRApBYGikAiaWRApBYGikAiaWRApBYGikAiaWRApBYGikAiaWRApBYGikAiaWRApBYGtMC
      ONzf5vnzGVLZYwxdY3l+jt1UFkMvksnkMcrH7KdytYxVIqk5pgWgODyMj43yYuY5y3NP8Yf7
      WFucpVDIsLWd4vnTGdxNnlrGKpHUHNM5i2674PMHf0dTey+Z3B4j/iZSHjfHms7y80f0TEzS
      7FLRdf3k62rM5ARflq8PqqYqxGVpYyN86rpuuioEcH45wTanl48++SZTD6dwOW3kSjoFTcOt
      qgxev0N2f5NCXxduu3oSiKwKUVufjbBrhM8LmRS/GVsim9cIRvuIdDQxO/cMXyCKx9VEe5uL
      wR4fW7spesIdZl1IJOeO6bIoZ0GWRTkfn7Isyts57Qggl0EllkYKQGJppAAklkYKQGJppAAk
      lkYKQGJppAAklkYKQGJppAAklkYKQGJppAAklkYKQGJppAAklkYKQGJppAAklkYKQGJppAAk
      lsZ0SuTa8gsOj4qUcTISdDAVy9HZ7mew+wqbWxo++yF5Vye9nS21jFciqSmmBdAzeJWufJbp
      mWWSB8e43U5aW6+gYHC4v82hU+XOhP8r1RLMZF8KIU4y/C+63WWK1YxdI32ete9Unv8+n6YF
      kN7dZH59n4lbN/E47fQKg8eff453rJ9cJk1zMAAoCGGY7vxgrvGNtLtMsZqh3j4rHfisOcEV
      f2/KCc7n8xweHpLP580L4NHjaQKRPjY2EvicGrvJLHndhkO10dUzhM9xyPLmHsPdgZNAzCTF
      m000r7ddNUnxl8WuET4rdmb6TiUpXgjB/v4+iqIwNzeHy+UiFAoxMDBgvirE+8wUQLwOQlaF
      OB+fsirEmzEMg1wux8HBAYqiEIvFaG9vZ2BggKamJuCLEcX0CHCagMyVwZJIzk65XGZvbw+7
      3c7y8jKqqhIKheju7qavr++tdubLg0kkDaIy+8jlcmxtbeFyudjY2CAQCNDd3c3HH398Uk7x
      fRdqKQDJpUAIQbFYZG9vD0VRiMfj2Gw2uru7CQaD9Pb2fuX5p61FKgUgubAYhkEqlWJ7e5u2
      tjbW1tYIBoOEw2Gi0WjVr6/rhhSA5OIghKBUKpFIJNA0jaOjI4QQRKNR2tvbiUQiNfGROSry
      6fN1fjy1KgUgaRyabhDfPeThzEt89iLjw32srcWIRCL09vbidDpN1watIISgVNbZ2M3waCHB
      05UdMkdFJkdD/OEPP5ECkNSXkqazsLrFzx7O8HQpgcOucrW7nQcpnZ8tFfj+/SG6whGczrN3
      TSEEZc0gVyiRPSqwsZvh8dI2K/EULc0u7oyE+P3fmiQa8GNXX22QyerQNbKT+wBf51XPEuTy
      RaaeL/G3U7Ms7ZZodel8++4Yn9waJdjuR7XZ0HSDlXiSP/9smaXNA755o4fv3Rukxes8eU8F
      UCxpJA5yJPazJPazHKSPOTwqkM4VSecKGELgdTtpctvpavNx92qIsd4Afq/rjf1PCqBGdlIA
      r67AhZLGbuqIuZVNns4ts7K5S9FQ6e/086v3b/LReD/NTc53+khlC/xo6iU/eRIj3N6M3+tm
      J3VEOlegpOmE2poJdfiIdPjoaPXS6nXR0uymtdmFy2E/2Xw9TXl0KYAa2VlRAMWyxk7yiPXd
      NMsbe8wtxtiMx+nsCtHTZmfi2hDXhnoItvkQhnFmn8WSxpPlLYRQCLU30+rz4GtyYjtFP5IC
      kAKoqZ0QguxxiV/MrBPbyRDbPiS+tYsoZgj47Hx8e4zuDi9Xh/po8Td/reNd1C/IkDfBkveS
      OSryfx4s8aOHS3R6ddo9gt++O4ZHDRCJhGlra3tvR7uoSAFI3kouX+J//3SaP/vxQ4bDLfzh
      7/wKLjuEw2HcbrfppcmLhBSA5ITKcYPV2Bp/9XdPefgyy93RMP/2D/4J4c4OVFWt6v7hIvLh
      tERiCsMw2NvbY31jk5WNbQ71Zj59sso3Jq/x7//VDQKtTY0O8VyRArAYQggKhQLr6+scHBxQ
      Utw8W02yuJWj2efj3tUO/t0f3CHU3vxBTHHehxTAB04lNXBnZ4dYLEY6e4SvI8L04jZLO3kc
      jjz3r0X5x9+LEm73oaqX82bWLKYFkDvcZ3Vji45QN8EWD4uLi/gDEbraPGRyBj63QfIYgm2+
      WsYrOQW6rpM9yvNs5gWzy+vsHwnSJZWCrqILlUDrFjcGOvntvxclGvBb4kr/NkwLoFAWjI2N
      8fDzRxw2qXQO3WB17imt3n52d0vE0nFGb03WMlbJO6hkRE0/n+fTpzH2y020NLsZ6ulmcuQK
      PZ0tdLU109rsBnH2TakPlbe+C9n9Df70z/+Gb3z3N2kz9niRcvLJ9b6T/7e3tzH7ZIqOSC+H
      uxu0eV3suZzkNZ2l51P0TkzS5FDRdR3DMDAMw9SV5rSJDY22q6YqhBmfhmFQKBRYXFwkmTpk
      I1liad8gU9D5B/fv862bPbQ2v2GpUhim22g21mrtKtldZ6FSTcL0RtiP/+LPGJn8Hv/zj/8z
      v/HdO8xvN39FADOPHxIamaDD72E+FecwX+a4XCZqVxm+PknuYIOj7k68LvtJIGaHWrNXq3ra
      VbMTfBqfhmFQLBZJpVLEYjHK5TIdoR5mtjSexDSCrT5++N0hJoY6UU+xKVXNCFDvz6MhO8GD
      /f1sZEr8i3/2A/7jH/0Xur/5T7/yf6fHTSK2xIG3laFrYywsvKAj3I/b1URHwMNgXwu7hxm8
      nW1nCvyiIoRgbSdNvqjhdqq4nXZcTjtuhx2XUz2XAgDlchlN05ibm+Po6IiWlhYGBgZoDvTy
      k2ebLE6/4OOxKP/6d8cIt/ssPZc3y1vPAglhkD3Y4S//6kcY7it8//vfxe959ym+t3FZzwIZ
      hmD38Ii/fb7OL2Y3AehoaaJY1imUtJOfYlnDodoItHq5PhDk1lAXA6ErOOyna3PFZ2Vak06n
      WVpaQlEUrl69isfjQbU7+Xw+wV98toyiKPz6vUHujXbR3OSuqo31sr2oZ4HeeRjuT/7oP3Dz
      e79Lfv6v2fTe5h99e/xMQXw5mMsigFK5zEGmwGcv4nw+F6dQ0vh4PMon429fMRFCkC+WSexn
      mYvt82Rlm53kEeEOHxODnVwfCBJs9eJ0qKi2LyoVVHZeC4UCq6urZDIZ/H4/o6Oj2FQHmiFI
      ZQv89EmMB3ObDEfb+cH9IYaibSiK0vDToPWya5gAPvvrP+VADVLeWaD3o3/IrYHgmYL4cjAX
      WQDHhTJrO2nWdw6Zi+2ROSoy3N3OJ+NReoItp1ob//I9gBCC40KZ2PYhT1d2WNo4wO1y4HLY
      OMpmUDBo8XlJ7W1xmD2iKxTF423G6XShGwLDEJS0V6PMUaHM7eEufvVWL20+z1feQymAt1P1
      PUBs9jGdN36Nj4J+Estejpzmbu4uIkIINN1gYeOAn0zHmF3d42pvO9+51ce3bnTjcTurmk8r
      ioLX42SsL8BAl49Eogmbzcb+/j4ud5hwOIzP14LxOo5CsUSTx43dpqCqNlSbAijIKf3581YB
      PJv+jJ5v9tKnKOSTmzzKGoxE2+sZW80plXViO4c8mN1kamGLdr+H79zu4/d+cJsmtwN4dcWp
      pvOXy2UODg7Y2tqis7OT9fV1wuEwXV1d9Pf3v9HG41TlunyDeOsUKBVf4D/9yf/C52/mMFvg
      937/X9LZ4jHlpJFToLJmsLh5wIPZTZ6t7NDidXF/LMK9qxECrU1fi+ms/oQQ5HI5Njc3T+xV
      VSUcDuP3+091Tv4yJMQ0ymdD7wF0rUyhWMbldp9k0Zuh3gLQDYOZlR1+8SLOs+Udutqa+Xg8
      yt3RMK3Nbmy2t8dxGn/lcpnd3V0SiQShUIjt7W1CoRAdHR24XK4zxXpanxfBrhE+GyqAWlEv
      AVTW6v/r/3tKqaTx9ycHuDMaosV7+qXCN/kzDIN0Ok0ikUAIgd1ux2azEQ6H8Xq9KIrywadE
      NsqnTIk8Jbl8if/x0zmmF7f44a9d5+5IJy6XuX0LgGKxyNbWFltbW/T29rK7u0soFKKtrQ2H
      w1HDyCWN5NKPALpu8PPn6/z3n8zxyXg3v/OtqzS5HWceOQCSySRra2sYhkFHRwdCCLq6uk6V
      /idHgPOzkyPAGxBCsBxP8t/+8hkep4N/88+/Rbjj9EevK4kh8Xicvb09uru7SaVSRCIRAoHA
      pU3ylpyNSyuAfFHjj//vU37rG6PcHQ2/88a2QiX9b3NzE03TiEajOJ1Obt++jcvlIhqNomma
      7PwW4tJOgYQQGEK89eRjpSMXCgU2NjbY3d2lu7sbTdMIBoM0N3+9ds27/L0POQU6Pzs5BXoD
      iqKgvuFNMQyD7e1tNjY2KJfLjIyM4PP5GBwclJtNkq9x6XuEEIJ8Ps/Lly9JJpNEo1FUVWVk
      ZITW1lZ5RFjyTi6dACpfuJxIJIjH4xSLRa5fv05nZyfXrl07mWpVe6RBYg0uhQA0TaNYLLKy
      skI6naazsxO/38/ExAQej7njGRIJVJMUf5TmxdIGN29dR8vs8mQxjs/vZ7ivk9ShQYunxH7B
      SSTgN/X6mqaRSCSIxWIoisL4+DiRSITx8XHTaYcSyS9jXgAlHTsGAtiLxwkNjBD2uzHKKZLJ
      PGuZbW5N3j3Vawkh0HWdUqnE/Pw8mUyGQCBAOBzm7t27eDweOZ2RnAumBdB6pY3EZgKAK+Fe
      ErtxHswnuT0xwMrsE7pv3sKhKm+tClFJ8q6sywshuHbtGr29vfj9X2Re6bpuqqLAh14VohF2
      jfDZsKoQZyFfKNHTN0A6eYAuYOjGJKXMBsmjIG1e10kgmqZRKpWYmZmhUCjQ0dFBb28v0WgU
      h8Px1kbKqhAXx64RPi/kPkA8tkxJ11hYWGG4L8TK4jw9w+M0e1yEQwbNQx0cpI7htQB+/vOf
      oygKY2Nj3LhxQ05rJBeCuu0EAx/0LqncCT4/u/McAep26EWer5FcRGSvlFgaKQCJpZECkFga
      KQCJpZECkFgaKQCJpZECkFgaKQCJpZECkFgaKQCJpZECkFgaKQCJpZECkFgaKQCJpZECkFga
      0wKofMOheP34KJelVNYRwkDTdITQKZW1GoYqkdQe0wLYTazx6aefoQPbq/Msryd4NPWYYj7J
      ystdVuefs58t1jBUiaT2mM4J7oz0cZDMARBP5ZicvMf8s2mONY3V+WeERkbov+J9a1WI03JZ
      KibIqhDnY1dJNb3QVSFUFHQh0IVAVWx09w+SyxxiIE4CqCYl0mylhXraVTq/2XZehjY2yqcZ
      O0VRTn7eRVVVIba2tzGcHob6IkxNPcbl9tHkdNLsbyXa5SK2uc9gd+ArQZnhMthVrvyXIdZq
      7D40n5f2+wEump2sCnF+dh9EVQiJ5CIiBSCxNFIAEksjBSCxNFIAEksjBSCxNFIAEksjBSCx
      NFIAEksjBSCxNFIAEksjBSCxNFIAEksjBSCxNFIAEksjBSCxNFIAEktTk5zgwuEW00vbtLT4
      Ge4Lsp/UaXUXOSh5iAb9tXAhkZwLNRkBduNx2sNR+nt7EHqRdCrNzOImoQ5fLV5eIjk3ajIC
      BPtHSaYyTE9NcfPmAC/nnxMZu4lqU2RZlHP0aYWyKLquX/yyKJl0Gt+Vduwb6whgcHwS43iD
      3XSAYIvnJBCzmf1mE7jraVdNUrxZn42wa4TP80yKr4kAOgJBVldjDI9N4PXYiUYFXk+Aw3S+
      Fi8vkZwbNRGAze5kcHjk5G9v06vfra3yHkBysZHLoBJLIwUgsTRSABJLIwUgsTRSABJLIwUg
      sTRSABJLIwUgsTRSABJLIwUgsTRSABJLIwUgsTQ1EYAQgmKhgKYbCGGgv/6tVXHuXCKpBzU5
      Dbq7tshmpkwxX+DOjT7WNsu4xC729gGiMitMcoGpyQiwcZDhzs3rXPGo5DWNjZUXHOrNRNpl
      55dcbGoiABUFQwgMIbApCsGuEMXjHIJz/wZWiaQqaiKAod4Qjx49pmhrwuNw4rvSwUh3Ky83
      92vx8hLJuVGTewBfR4T7HZGTv/v7Xv2+UosXl0jOkZoI4F1UqkKYyeyHV8nmZioK1NvObEWI
      anzW264RPivVHcxWhXjfZ3LuAqhUSaimKoTZSgv1tDttGY5a+myEXSN8muk7lefXpSrEaYOp
      p+1lsWuETyvEelo7RZgdtyWSDwB5FEJiaeoyBQIw9BILM08oODu5NRrh6eMpNF2ns38cPbNF
      5rjE5k6SX5kYJpbYp5DPM3HvPh77u4ey1F6CqelFvv3r3yG7vcZq/ICyDjfHBnj5cp2j9B6+
      6HW85X0O8xpd0T662ltMt0PXiizOPKHkjnBzOMj09BN0vUx4cIL83ktyJQPF3kRfsIn52DaK
      zcXdyRtVXWmOMwc8np5h5PZ9/GR5Or9GuVTm7v1JXjx9AjYbrcFe+qMB5qd/RsE9xK1r4So8
      GizPPeeg6OD+7TFmnzykqBn4gn149DR76WM0Q+Vafwezy1sIrczNu/docphvZbmQ48XME5yB
      MUZCTh5Nz2EYGiPX7xBffkZZE7SEBvCKLNvJLIWSwb27t1BNT+cEGy+X6jcCKDYHo9euYkeg
      FXPgusLkvY+Ix5boG7rKcHcbkd4hWgJhJm5ex2XT0fT3z85a27vo7upAANvbe1y7MUHYbyOj
      ublx4waeJj+D3a1sxPdQbSoet6uqdthUJ6Njo9iEQSmfwd7UweTdj9hcXSB7lKenp4di/oj1
      zW0mbk/S7i5xmDeq8unxXWG4P4owDA624nSP3uT24BUW1pOUhUpPtItsNkNmbwO1uY1yWavK
      HygMjI7R5FCAMsdllduT90hurZHJZglHexBagXwuQ3N7CL8LClp1M2m7y8vYtSH0sk5uf5uW
      yBB3rg+zur5ModzE7buT7MdjdEb7uTE2itBLVDt5j/QN1VEAioLttVrtbj+tboPZ+SV0A0Aw
      txRnbCiCXjri8wefER6ZwOd6f3iKzQavLwJDQ0Msv5glsZcCoHR0gO66gtsuEDY3164OMzc7
      U7N2OL1tNNuLzC0soQuB0+HgYP8A1eF4/VywKYrp5dEvfNoqTaRrYJTk2gtWN7YRQkdVIHmY
      w2GH6eeLuGwGh6kkp7h2vMvjSRvBQTjoZ2b2BfmygcPhJJ06AJsdXdjRixl0FHStuoOPiqJQ
      cenr6oN0nMWX6wjhIRRwMTu7QEEzKOaSfPbwKddu3MJuM38zD6/qhtZNAHr5mLkXC6zFXrKb
      zGAAWj5Lz8AIhfQOqi+I3aawPPsUzeFhf3uTQvn9V869rQ1ia2sszC9S0AxU1YbquUKgxcX8
      /ApXRwcAN1d8CrMv5vE0m5/+AGjFI+bmFlhbe8leKoMAtONX7SgVC+QLBQqFEl2BNp5OT7OV
      FbR6zC85AmSSOyy9XGVpYZ7joo6iqGT1JoYjPgr5Vz5LZYOJ27fxNrlxOJxU0zUwyizMv2Bt
      bY3N7f1XexxagWhPP1qpSP61T0Mrv3p8XMCoUuSF3CFz88usrS6Rzh0jFBuFokZ/XwRDCPRy
      ge7eAaanpvA0e9mKxzGMKnwKg9jyQv1WgYQQX9rUsMHrk0K2L83hFEU52TSD063//vLzDcM4
      sas8/rL/avYj3twOA4GCarN91QegGwaKzfaVNpryaRgnHazSRkWxYbN98X5V2iXE199XE41E
      /6UNqIoP4MS/oryKTSgKttd/m3dpnHRoxWYDw4DX1Z1ftfFV24XQT6Y+VX2Wr9sol0EllkYu
      g0osjRSAxNJIAUgsjRSAxNJIAUgsjRSAxNJIAUgsjRSAxNJIAUgsjRSAxNL8f+A74yeYNYg7
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Extraction Rate over year (V)' width='192'>
      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
    </thumbnail>
    <thumbnail height='95' name='India vs China in each Category' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trend of Each Co2 Emission Category' width='192'>
      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
      rgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trend of Each Co2 Emission Category (V)' width='192'>
      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
      qdKRO4kTdQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
